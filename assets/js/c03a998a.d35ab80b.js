"use strict";(self.webpackChunkuse_docusaurus_github_io=self.webpackChunkuse_docusaurus_github_io||[]).push([[513],{2316:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"styling/install-tailwind","title":"Install Tailwind CSS","description":"We have to be careful while installing Tailwind because it can override the default styles of Docusaurus because of preflight. We will install Tailwind in a way that it doesn\'t affect the default styles.","source":"@site/docs/styling/install-tailwind.mdx","sourceDirName":"styling","slug":"/styling/install-tailwind","permalink":"/docs/styling/install-tailwind","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/styling/install-tailwind.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Install Tailwind CSS"},"sidebar":"docSidebar","previous":{"title":"Styling","permalink":"/docs/category/styling"},"next":{"title":"Change Colors and Font","permalink":"/docs/styling/change-colors-font"}}');var t=n(4848),l=n(8453);const a={sidebar_position:1,title:"Install Tailwind CSS"},d="Install Tailwind CSS",o={},c=[{value:"Tailwind",id:"tailwind",level:2},{value:"Install Tailwind",id:"install-tailwind",level:3},{value:"Create Tailwind Config",id:"create-tailwind-config",level:3},{value:"Update Tailwind Config",id:"update-tailwind-config",level:3},{value:"Add Tailwind to CSS file",id:"add-tailwind-to-css-file",level:3},{value:"Tailwind Plugin",id:"tailwind-plugin",level:2},{value:"Create plugin file",id:"create-plugin-file",level:3},{value:"Add plugin to <code>package.json</code>",id:"add-plugin-to-packagejson",level:3},{value:"Add plugin to <code>docusaurus.config.js</code>",id:"add-plugin-to-docusaurusconfigjs",level:3},{value:"Testing Tailwind",id:"testing-tailwind",level:2},{value:"Add a test page",id:"add-a-test-page",level:3},{value:"Test page",id:"test-page",level:3},{value:"Done!",id:"done",level:2}];function r(e){const i={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"install-tailwind-css",children:"Install Tailwind CSS"})}),"\n",(0,t.jsx)(i.p,{children:"We have to be careful while installing Tailwind because it can override the default styles of Docusaurus because of preflight. We will install Tailwind in a way that it doesn't affect the default styles."}),"\n",(0,t.jsx)(i.h2,{id:"tailwind",children:"Tailwind"}),"\n",(0,t.jsx)(i.h3,{id:"install-tailwind",children:"Install Tailwind"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"npm install -D tailwindcss postcss autoprefixer tailwindcss-scoped-preflight @tailwindcss/typography\n"})}),"\n",(0,t.jsx)(i.h3,{id:"create-tailwind-config",children:"Create Tailwind Config"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"npx tailwindcss init\n"})}),"\n",(0,t.jsx)(i.h3,{id:"update-tailwind-config",children:"Update Tailwind Config"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ts",metastring:'title="tailwind.config.ts"',children:'import { type Config } from "tailwindcss";\nimport {\n  scopedPreflightStyles,\n  isolateInsideOfContainer,\n} from "tailwindcss-scoped-preflight";\n\n/** @type {import(\'tailwindcss\').Config} */\nmodule.exports = {\n  content: ["./src/**/*.html", "./src/**/*.js", "./src/**/*.tsx", "./*.ts"],\n  darkMode: ["class", \'[data-theme="dark"]\'],\n  important: true,\n  plugins: [\n    require("@tailwindcss/typography"),\n    scopedPreflightStyles({\n      isolationStrategy: isolateInsideOfContainer(".twp", {\n        except: ".no-twp",\n      }),\n    }),\n  ],\n} satisfies Config;\n'})}),"\n",(0,t.jsx)(i.h3,{id:"add-tailwind-to-css-file",children:"Add Tailwind to CSS file"}),"\n",(0,t.jsxs)(i.p,{children:["Make sure you following ",(0,t.jsx)(i.strong,{children:"two"})," changes"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-css",metastring:'title="src/styles/tailwind.css"',children:"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-css",metastring:'title="src/css/custom.css"',children:'@import "../styles/tailwind.css";\n'})}),"\n",(0,t.jsx)(i.h2,{id:"tailwind-plugin",children:"Tailwind Plugin"}),"\n",(0,t.jsx)(i.h3,{id:"create-plugin-file",children:"Create plugin file"}),"\n",(0,t.jsxs)(i.p,{children:["Create a file at ",(0,t.jsx)(i.code,{children:"plugins/docusaurus-tailwindcss-loader/index.js"}),":"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-js",metastring:'title="plugins/docusaurus-tailwindcss-loader/index.js"',children:'module.exports = function (context, options) {\n  return {\n    name: "postcss-tailwindcss-loader",\n    // https://github.com/facebook/docusaurus/issues/2961\n    configurePostCss(postcssOptions) {\n      postcssOptions.plugins.push(require("tailwindcss"));\n      postcssOptions.plugins.push(require("autoprefixer"));\n      return postcssOptions;\n    },\n  };\n};\n'})}),"\n",(0,t.jsxs)(i.h3,{id:"add-plugin-to-packagejson",children:["Add plugin to ",(0,t.jsx)(i.code,{children:"package.json"})]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-js",metastring:'title="package.json"',children:'  "devDependencies": {\n    "docusaurus-tailwindcss-loader": "file:plugins/docusaurus-tailwindcss-loader",\n  },\n'})}),"\n",(0,t.jsxs)(i.h3,{id:"add-plugin-to-docusaurusconfigjs",children:["Add plugin to ",(0,t.jsx)(i.code,{children:"docusaurus.config.js"})]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-js",metastring:'title="docusaurus.config.js"',children:'plugins: ["docusaurus-tailwindcss-loader"],\n'})}),"\n",(0,t.jsx)(i.h2,{id:"testing-tailwind",children:"Testing Tailwind"}),"\n",(0,t.jsx)(i.h3,{id:"add-a-test-page",children:"Add a test page"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-tsx",metastring:'title="src/pages/tailwind.tsx"',children:'import clsx from "clsx";\nimport useDocusaurusContext from "@docusaurus/useDocusaurusContext";\nimport Layout from "@theme/Layout";\n\nexport default function Home(): JSX.Element {\n  const { siteConfig } = useDocusaurusContext();\n  return (\n    <Layout\n      title={`Hello from ${siteConfig.title}`}\n      description="Description will go into a meta tag in <head />"\n    >\n      <div className="bg-gray-50 p-10 twp">\n        <div className="mx-auto max-w-7xl py-12 sm:px-6 lg:px-8 bg-white">\n          <div className="mx-auto max-w-4xl">\n            <div className="flex flex-col gap-4">\n              <p>Just some content, Tailwind will work here</p>\n              <ul className="p-2 bg-blue-200 list-none">\n                <li>Item 1</li>\n                <li>Item 2</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n'})}),"\n",(0,t.jsx)(i.h3,{id:"test-page",children:"Test page"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Visit ",(0,t.jsx)(i.code,{children:"/tailwind"})," page to check if Tailwind is working"]}),"\n",(0,t.jsx)(i.li,{children:"Check Homepage, it should not be affected by Tailwind Preflight"}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"done",children:"Done!"}),"\n",(0,t.jsx)(i.admonition,{type:"info",children:(0,t.jsx)(i.p,{children:"At this point you should have Tailwind CSS installed and configured in your Docusaurus project."})})]})}function u(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>d});var s=n(6540);const t={},l=s.createContext(t);function a(e){const i=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(l.Provider,{value:i},e.children)}}}]);