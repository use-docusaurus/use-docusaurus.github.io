"use strict";(self.webpackChunkuse_docusaurus_github_io=self.webpackChunkuse_docusaurus_github_io||[]).push([[9502],{4418:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>m,contentTitle:()=>f,default:()=>v,frontMatter:()=>p,metadata:()=>a,toc:()=>h});const a=JSON.parse('{"id":"ladle/implement-preview","title":"Resizable Preview","description":"Ladle helps in preview of components. If you are building a component library and you want help showing previews of components, Ladle can help you.","source":"@site/docs/ladle/implement-preview.mdx","sourceDirName":"ladle","slug":"/ladle/implement-preview","permalink":"/docs/ladle/implement-preview","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ladle/implement-preview.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docSidebar","previous":{"title":"Integrate Ladle","permalink":"/docs/ladle/integrate-ladle"}}');var t=r(4848),l=r(8453),i=r(7464);r(3906);const s='"use client";\n\nimport { GripVertical } from "lucide-react";\nimport * as ResizablePrimitive from "react-resizable-panels";\nimport { ImperativePanelHandle } from "react-resizable-panels";\nimport { clsx, type ClassValue } from "clsx";\nimport { twMerge } from "tailwind-merge";\nimport * as React from "react";\nimport { useColorMode } from "@docusaurus/theme-common";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      "flex h-full w-full data-[panel-group-direction=vertical]:flex-col",\n      className\n    )}\n    {...props}\n  />\n);\n\nconst ResizablePanel = ResizablePrimitive.Panel;\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean;\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      "relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className="z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border">\n        <GripVertical className="h-2.5 w-2.5" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n);\n\nconst getLadleUrl = (story) => {\n  const isDevelopment = process.env.NODE_ENV === "development";\n  if (isDevelopment) {\n    return `http://localhost:61000/ladle?story=${story}&mode=preview`;\n  }\n  return `/ladle?mode=preview&story=${story}`;\n};\n\nexport default function ResizableLadlePreview({ story, height }) {\n  const resizablePanelRef = React.useRef<ImperativePanelHandle>(null);\n\n  const { colorMode, setColorMode } = useColorMode();\n\n  React.useEffect(() => {\n    const updateIframeTheme = (theme) => {\n      const iframe = document.querySelector("iframe");\n      if (iframe && iframe.contentDocument) {\n        iframe.contentDocument.documentElement.setAttribute(\n          "data-theme",\n          theme\n        );\n      }\n    };\n\n    updateIframeTheme(colorMode);\n  }, [colorMode]);\n\n  return (\n    <div className="group-data-[view=code]/block-view-wrapper:hidden md:h-[--height] twp">\n      <div className="grid w-full gap-4">\n        <ResizablePanelGroup direction="horizontal" className="relative z-10">\n          <ResizablePanel\n            ref={resizablePanelRef}\n            className="relative aspect-[4/2.5] rounded-xl border bg-background md:aspect-auto"\n            defaultSize={100}\n            minSize={30}\n          >\n            <iframe\n              allow="cross-origin-isolated"\n              src={getLadleUrl(story)}\n              height={height || 930}\n              className="relative z-20 hidden w-full bg-background md:block"\n            />\n          </ResizablePanel>\n          <ResizableHandle className="relative hidden w-3 bg-transparent p-0 after:absolute after:right-0 after:top-1/2 after:h-8 after:w-[6px] after:-translate-y-1/2 after:translate-x-[-1px] after:rounded-full after:bg-border after:transition-all after:hover:h-10 md:block" />\n          <ResizablePanel defaultSize={0} minSize={0} />\n        </ResizablePanelGroup>\n      </div>\n    </div>\n  );\n}\n',o='export const World = () => (\n  <p className="bg-red-200 md:bg-blue-200 m-6 p-6 dark:md:bg-green-200">\n    Hello World\n  </p>\n);\n';var d=r(8069);const c='import { type Config } from "tailwindcss";\nimport {\n  scopedPreflightStyles,\n  isolateInsideOfContainer,\n} from "tailwindcss-scoped-preflight";\n\n/** @type {import(\'tailwindcss\').Config} */\nmodule.exports = {\n  content: ["./src/**/*.html", "./src/**/*.js", "./src/**/*.tsx", "./*.ts"],\n  darkMode: ["class", \'[data-theme="dark"]\'],\n  important: true,\n\n  theme: {\n    extend: {\n      colors: {\n        border: "hsl(var(--border))",\n        input: "hsl(var(--input))",\n        ring: "hsl(var(--ring))",\n        background: "hsl(var(--background))",\n        foreground: "hsl(var(--foreground))",\n        primary: {\n          DEFAULT: "hsl(var(--primary))",\n          foreground: "hsl(var(--primary-foreground))",\n        },\n        secondary: {\n          DEFAULT: "hsl(var(--secondary))",\n          foreground: "hsl(var(--secondary-foreground))",\n        },\n        destructive: {\n          DEFAULT: "hsl(var(--destructive))",\n          foreground: "hsl(var(--destructive-foreground))",\n        },\n        muted: {\n          DEFAULT: "hsl(var(--muted))",\n          foreground: "hsl(var(--muted-foreground))",\n        },\n        accent: {\n          DEFAULT: "hsl(var(--accent))",\n          foreground: "hsl(var(--accent-foreground))",\n        },\n        popover: {\n          DEFAULT: "hsl(var(--popover))",\n          foreground: "hsl(var(--popover-foreground))",\n        },\n        card: {\n          DEFAULT: "hsl(var(--card))",\n          foreground: "hsl(var(--card-foreground))",\n        },\n      },\n      borderRadius: {\n        lg: `var(--radius)`,\n        md: `calc(var(--radius) - 2px)`,\n        sm: "calc(var(--radius) - 4px)",\n      },\n    },\n  },\n\n  plugins: [\n    require("tailwindcss-animate"),\n    require("@tailwindcss/typography"),\n    scopedPreflightStyles({\n      isolationStrategy: isolateInsideOfContainer(".twp", {\n        except: ".no-twp",\n      }),\n    }),\n  ],\n} satisfies Config;\n',u="@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 222.2 47.4% 11.2%;\n    --muted: 210 40% 96.1%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 47.4% 11.2%;\n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n    --card: 0 0% 100%;\n    --card-foreground: 222.2 47.4% 11.2%;\n    --primary: 222.2 47.4% 11.2%;\n    --primary-foreground: 210 40% 98%;\n    --secondary: 210 40% 96.1%;\n    --secondary-foreground: 222.2 47.4% 11.2%;\n    --accent: 210 40% 96.1%;\n    --accent-foreground: 222.2 47.4% 11.2%;\n    --destructive: 0 100% 50%;\n    --destructive-foreground: 210 40% 98%;\n    --ring: 215 20.2% 65.1%;\n    --radius: 0.5rem;\n  }\n\n  .dark {\n    --background: 224 71% 4%;\n    --foreground: 213 31% 91%;\n    --muted: 223 47% 11%;\n    --muted-foreground: 215.4 16.3% 56.9%;\n    --accent: 216 34% 17%;\n    --accent-foreground: 210 40% 98%;\n    --popover: 224 71% 4%;\n    --popover-foreground: 215 20.2% 65.1%;\n    --border: 216 34% 17%;\n    --input: 216 34% 17%;\n    --card: 224 71% 4%;\n    --card-foreground: 213 31% 91%;\n    --primary: 210 40% 98%;\n    --primary-foreground: 222.2 47.4% 1.2%;\n    --secondary: 222.2 47.4% 11.2%;\n    --secondary-foreground: 210 40% 98%;\n    --destructive: 0 63% 31%;\n    --destructive-foreground: 210 40% 98%;\n    --ring: 216 34% 17%;\n  }\n}\n",p={sidebar_position:2},f="Resizable Preview",m={},h=[{value:"Configure ShadCN",id:"configure-shadcn",level:2},{value:"Install packages",id:"install-packages",level:3},{value:"Add CSS Variables to tailwind.CSS",id:"add-css-variables-to-tailwindcss",level:3},{value:"Add ShanCN Variables to tailwind.config",id:"add-shancn-variables-to-tailwindconfig",level:3},{value:"Add ResizableLadlePreview.tsx",id:"add-resizableladlepreviewtsx",level:2},{value:"Test Preview",id:"test-preview",level:2},{value:"Add Hello World Story",id:"add-hello-world-story",level:3},{value:"Run Ladle",id:"run-ladle",level:3},{value:"Example Story with Preview",id:"example-story-with-preview",level:3},{value:"Unrealistic Example",id:"unrealistic-example",level:3},{value:"Realistic Example",id:"realistic-example",level:3}];function g(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"resizable-preview",children:"Resizable Preview"})}),"\n",(0,t.jsx)(n.p,{children:"Ladle helps in preview of components. If you are building a component library and you want help showing previews of components, Ladle can help you."}),"\n",(0,t.jsx)(n.h2,{id:"configure-shadcn",children:"Configure ShadCN"}),"\n",(0,t.jsx)(n.h3,{id:"install-packages",children:"Install packages"}),"\n",(0,t.jsx)(n.p,{children:"We are going to use react-resizable-panels and some styling from shadcn"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm i tailwindcss-animate clsx tailwind-merge react-resizable-panels lucide-react\n"})}),"\n",(0,t.jsx)(n.h3,{id:"add-css-variables-to-tailwindcss",children:"Add CSS Variables to tailwind.CSS"}),"\n",(0,t.jsx)(d.A,{title:"src/styles/tailwind.css",language:"css",children:u}),"\n",(0,t.jsx)(n.h3,{id:"add-shancn-variables-to-tailwindconfig",children:"Add ShanCN Variables to tailwind.config"}),"\n",(0,t.jsx)(d.A,{title:"tailwind.config.ts",language:"ts",children:c}),"\n",(0,t.jsx)(n.h2,{id:"add-resizableladlepreviewtsx",children:"Add ResizableLadlePreview.tsx"}),"\n",(0,t.jsx)(d.A,{title:"src/components/ResizableLadlePreview.tsx",language:"tsx",children:s}),"\n",(0,t.jsx)(n.h2,{id:"test-preview",children:"Test Preview"}),"\n",(0,t.jsx)(n.h3,{id:"add-hello-world-story",children:"Add Hello World Story"}),"\n",(0,t.jsx)(d.A,{title:"src/stories/hello.stories.tsx",language:"tsx",children:o}),"\n",(0,t.jsx)(n.h3,{id:"run-ladle",children:"Run Ladle"}),"\n",(0,t.jsx)(n.p,{children:"For following to work during development. Keep both commands running:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run start\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run ladle:serve\n"})}),"\n",(0,t.jsx)(n.h3,{id:"example-story-with-preview",children:"Example Story with Preview"}),"\n",(0,t.jsx)(n.p,{children:"In any .mdx file of docusaurus add following The components loads ladle preview of a story in an iframe which is resizable."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import ResizableLadlePreview from "@site/src/components/ResizableLadlePreview";\n<ResizableLadlePreview story="hello--world" height={200} />;\n'})}),"\n",(0,t.jsx)(n.p,{children:"It should show up like following:"}),"\n",(0,t.jsx)(n.h3,{id:"unrealistic-example",children:"Unrealistic Example"}),"\n",(0,t.jsx)(i.A,{story:"hello--world",height:200}),"\n",(0,t.jsx)(n.h3,{id:"realistic-example",children:"Realistic Example"}),"\n",(0,t.jsx)(i.A,{story:"page--world",height:600})]})}function v(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(g,{...e})}):g(e)}},3906:(e,n,r)=>{var a=r(9027);r(4848);a.Zk;r(6540)},7464:(e,n,r)=>{r.d(n,{A:()=>h});var a=r(8598),t=r(9027),l=r(4164),i=r(856),s=r(6540),o=r(8532),d=r(4848);function c(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return(0,i.QP)((0,l.$)(n))}const u=e=>{let{className:n,...r}=e;return(0,d.jsx)(t.YZ,{className:c("flex h-full w-full data-[panel-group-direction=vertical]:flex-col",n),...r})},p=t.Zk,f=e=>{let{withHandle:n,className:r,...l}=e;return(0,d.jsx)(t.TW,{className:c("relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90",r),...l,children:n&&(0,d.jsx)("div",{className:"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border",children:(0,d.jsx)(a.A,{className:"h-2.5 w-2.5"})})})},m=e=>`/ladle?mode=preview&story=${e}`;function h(e){let{story:n,height:r}=e;const a=s.useRef(null),{colorMode:t,setColorMode:l}=(0,o.G)();return s.useEffect((()=>{(e=>{const n=document.querySelector("iframe");n&&n.contentDocument&&n.contentDocument.documentElement.setAttribute("data-theme",e)})(t)}),[t]),(0,d.jsx)("div",{className:"group-data-[view=code]/block-view-wrapper:hidden md:h-[--height] twp",children:(0,d.jsx)("div",{className:"grid w-full gap-4",children:(0,d.jsxs)(u,{direction:"horizontal",className:"relative z-10",children:[(0,d.jsx)(p,{ref:a,className:"relative aspect-[4/2.5] rounded-xl border bg-background md:aspect-auto",defaultSize:100,minSize:30,children:(0,d.jsx)("iframe",{allow:"cross-origin-isolated",src:m(n),height:r||930,className:"relative z-20 hidden w-full bg-background md:block"})}),(0,d.jsx)(f,{className:"relative hidden w-3 bg-transparent p-0 after:absolute after:right-0 after:top-1/2 after:h-8 after:w-[6px] after:-translate-y-1/2 after:translate-x-[-1px] after:rounded-full after:bg-border after:transition-all after:hover:h-10 md:block"}),(0,d.jsx)(p,{defaultSize:0,minSize:0})]})})})}}}]);